#!/usr/bin/env bash

set -e

# CNB buildpack specific variables
LAYERS_DIR="$1"
PLATFORM_DIR="$2"
APP_DIR="/workspace"

echo "-----> Installing Heroku AppLink Service Mesh..."

# Create layers directory structure
LAYER_DIR="${LAYERS_DIR}/service-mesh"
mkdir -p "$LAYER_DIR"

# Source the shared utility
source "$(dirname "$0")/../lib/applink_installer.sh"

# Install binary to layer bin directory (automatically added to PATH)
mkdir -p "${LAYER_DIR}/bin"
if ! install_applink_binary "${LAYER_DIR}/bin"; then
    echo " !     Failed to install Heroku AppLink Service Mesh binary"
    exit 1
fi

# Create layer metadata
cat > "${LAYER_DIR}.toml" << EOL
[types]
launch = true
build = false
cache = false

[metadata]
version = "${APPLINK_VERSION}"
arch = "${APPLINK_ARCH}"
EOL


# Read web process from Procfile
echo "-----> Reading web process from Procfile..."
if [ -f "${APP_DIR}/Procfile" ]; then
    WEB_COMMAND=$(grep "^web:" "${APP_DIR}/Procfile" | sed 's/^web: //')
    if [ -z "$WEB_COMMAND" ]; then
        echo " !     No web process found in Procfile"
        exit 1
    fi

    BINARY_NAME="heroku-applink-service-mesh"

    # Check if web command already contains the binary name
    if [[ "$WEB_COMMAND" =~ "$BINARY_NAME" ]]; then
        echo " !     Web process already contains the heroku-applink-service-mesh binary name"
    else
        # Create launch.toml to set the start command
        cat > "${LAYERS_DIR}/launch.toml" << EOL
[[processes]]
type = "web"
command = ["${APPLINK_BINARY_NAME}", "${WEB_COMMAND}"]
EOL

        echo "-----> Command to be executed: ${APPLINK_BINARY_NAME} ${WEB_COMMAND}"
        echo "-----> The service mesh will automatically wrap your web process at runtime"
    fi
else
    echo " !     Procfile not found at ${APP_DIR}/Procfile"
    exit 1
fi

echo "-----> Done!"

