#!/usr/bin/env bash

set -euo pipefail

# Source the shared utility
source "$(dirname "$0")/../lib/applink_installer.sh"

export_env_dir() {
  local env_dir=$1
  if [ -d "$env_dir" ]; then
    local acceptlist_regex=${2:-''}
    local denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}

    pushd "$env_dir" > /dev/null
    for e in *; do
      [ -e "$e" ] || continue
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
        export "$e=$(cat "$e")"
        :
    done
    popd > /dev/null
  fi
}

# Gather params
BUILD_DIR="$1"
# shellcheck disable=SC2034
CACHE_DIR="$2"
ENV_DIR="$3"

# Export env files as env vars
export_env_dir "$ENV_DIR"

# Setup installation paths for classic buildpack
VENDOR_DIR="vendor/heroku-applink/bin"
DOWNLOAD_INSTALL_DIR="$BUILD_DIR/$VENDOR_DIR"

if ! install_applink_binary "$DOWNLOAD_INSTALL_DIR"; then
    echo " !     Failed to install Heroku AppLink Service Mesh binary"
    exit 1
fi

# Setup .profile.d for PATH
PROFILE_PATH="$BUILD_DIR/.profile.d/heroku-applink-service-mesh.sh"
mkdir -p "$(dirname "$PROFILE_PATH")"
echo "export PATH=\"\$PATH:\$HOME/$VENDOR_DIR\"" >> "$PROFILE_PATH"

# Create symlink for runtime (/app path)
ln -sf "/app/$VENDOR_DIR/$(basename "$APPLINK_BINARY_PATH")" "$DOWNLOAD_INSTALL_DIR/$APPLINK_BINARY_NAME"
