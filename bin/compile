#!/bin/sh

set -e
#set -x

indent() {
    sed -u 's/^/       /'
}

export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-''}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

# Gather params
BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

# Export env files as env vars
export_env_dir $ENV_DIR

# Detect architecture
ARCH=$(uname -m)
if [ "$ARCH" = "x86_64" ]; then
    ARCH="amd64"
elif [ "$ARCH" = "arm64" ]; then
    ARCH="arm64"
else
    echo " !     Unsupported architecture: $ARCH"
    exit 1
fi

# Setup S3 URL
S3_BUCKET="${HEROKU_APPLINK_SERVICE_MESH_S3_BUCKET:-heroku-applink-service-mesh-binaries}"
VERSION="${HEROKU_APPLINK_SERVICE_MESH_RELEASE_VERSION:-latest}"
BINARY_NAME="heroku-applink-service-mesh-${VERSION}-${ARCH}"
S3_URL="https://${S3_BUCKET}.s3.amazonaws.com/${BINARY_NAME}"
ASC_URL="${S3_URL}.asc"
PUBKEY_URL="https://heroku-applink-service-mesh-binaries.s3.amazonaws.com/public-key.asc"
WELL_KNOWN_BINARY_NAME="heroku-applink-service-mesh"

# Setup installation paths
VENDOR_DIR="vendor/heroku-applink/bin"
DOWNLOAD_INSTALL_DIR="$BUILD_DIR/$VENDOR_DIR"
mkdir -p $DOWNLOAD_INSTALL_DIR

# Require gpg
if ! command -v gpg > /dev/null; then
    echo " !     gpg is not installed!"
    echo " !     Ensure the app is on the latest Heroku stack"
    exit 1
fi

# Download
echo "-----> Installing Heroku AppLink Service Mesh for $ARCH..."
echo "Downloading $BINARY_NAME..." | indent
CURRENT_DIR=`echo $PWD`
cd $DOWNLOAD_INSTALL_DIR

# Download binary, signature and public key
curl -JLs $S3_URL -o $BINARY_NAME
curl -JLs $ASC_URL -o "${BINARY_NAME}.asc"
curl -JLs $PUBKEY_URL -o "public-key.asc"

# Import public key
echo "Importing public key..." | indent
gpg --import public-key.asc

# Verify signature
echo "Verifying binary signature..." | indent
if ! gpg --verify "${BINARY_NAME}.asc" $BINARY_NAME; then
    echo " !     Binary signature verification failed!"
    exit 1
fi

cd $CURRENT_DIR

if [ ! -f "$DOWNLOAD_INSTALL_DIR/$BINARY_NAME" ]; then
    echo " !     Heroku AppLink Service Mesh binary not found at $DOWNLOAD_INSTALL_DIR/$BINARY_NAME!"
    exit 1
fi

echo "Installing $BINARY_NAME..." | indent
chmod +x "$DOWNLOAD_INSTALL_DIR/$BINARY_NAME"
ln -s "$DOWNLOAD_INSTALL_DIR/$BINARY_NAME" "$DOWNLOAD_INSTALL_DIR/$WELL_KNOWN_BINARY_NAME"
PROFILE_PATH="$BUILD_DIR/.profile.d/$BINARY_NAME.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export PATH="$PATH:'$HOME/$VENDOR_DIR'"' >> $PROFILE_PATH

# Cleanup
rm -f "$DOWNLOAD_INSTALL_DIR/public-key.asc" "${DOWNLOAD_INSTALL_DIR}/${BINARY_NAME}.asc"

echo "Done!" | indent
echo "-----> Ensure that $WELL_KNOWN_BINARY_NAME is configured in your Procfile's web process to start your app, eg $WELL_KNOWN_BINARY_NAME <app startup command>"
